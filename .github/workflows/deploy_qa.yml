name: deploy qa

on:
  push:
    branches:
      - qa

env:
  AWS_DEFAULT_REGION: us-east-1
  LOCAL_TAG_NAME: dc-frontend:${{ github.ref_name }}-${{ github.run_number }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: https://qa-new-digitalcollections.nypl.org/
    services:
      docker:
        image: docker:19.03.12
        options: --privileged
        ports:
          - 2375:2375
        env:
          DOCKER_TLS_CERTDIR: ""
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Configure AWS credentials from Prod account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }} //need
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }} //need
          aws-region: us-east-1

      - name: Build and push Docker image
        env:
          APP_ENV: ${{ github.ref_name }}
          NEW_RELIC_LICENSE_KEY: ${{ env.NEW_RELIC_LICENSE_KEY }}
        run: |
          docker build --build-arg APP_ENV="${APP_ENV}" --build-arg NEW_RELIC_LICENSE_KEY="${NEW_RELIC_LICENSE_KEY}" --tag "${LOCAL_TAG_NAME}" .
          docker tag "${LOCAL_TAG_NAME}" "${ECR_URL}"
          docker push "${ECR_URL}"

      - name: Update ECS service
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }} //need
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }} //need
        run: |
          aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
