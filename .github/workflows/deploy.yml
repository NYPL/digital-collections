name: Publish to Production
on:
  release:
    types: [released]

jobs:
  include:
    - stage: deploy QA
      if: "(branch = qa) AND (type != pull_request)"
      env:
        - ECR_URL=685731035297.dkr.ecr.us-east-1.amazonaws.com/dc-frontend:$TRAVIS_BRANCH-latest
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_QA
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_QA
        - CLUSTER_NAME=dc-frontend-qa
        - SERVICE_NAME=dc-frontend-qa
        - APP_ENV=qa
      install:
        - pip install --user awscli
      script:
        - eval $(aws ecr get-login --no-include-email)
        - docker build --build-arg APP_ENV="$APP_ENV" --build-arg NEW_RELIC_LICENSE_KEY="$NEW_RELIC_LICENSE_KEY"
          --tag "$LOCAL_TAG_NAME" .
        - docker tag "$LOCAL_TAG_NAME" "$ECR_URL";
        - docker push "$ECR_URL";
        - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
    - stage: deploy production
      if: "(branch = production) AND (type != pull_request)"
      env:
        - ECR_URL=557492996044.dkr.ecr.us-east-1.amazonaws.com/dc-frontend:latest
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID_PRODUCTION
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY_PRODUCTION
        # ECS cluster name was updated from dc-frontend to new-digitalcollections
        # This is only true for production
        - CLUSTER_NAME=new-digitalcollections
        - SERVICE_NAME=new-digitalcollections
        - APP_ENV=production
      install:
        - pip install --user awscli
      script:
        - eval $(aws ecr get-login --no-include-email)
        - docker build --build-arg APP_ENV="$APP_ENV" --build-arg NEW_RELIC_LICENSE_KEY="$NEW_RELIC_LICENSE_KEY"
          --tag "$LOCAL_TAG_NAME" .
        - docker tag "$LOCAL_TAG_NAME" "$ECR_URL";
        - docker push "$ECR_URL";
        - aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --force-new-deployment
